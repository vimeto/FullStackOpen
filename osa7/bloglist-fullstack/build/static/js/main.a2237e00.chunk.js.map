{"version":3,"sources":["components/utils/togglable.js","hooks/index.js","services/blogs.js","reducers/notificationReducer.js","reducers/blogReducer.js","components/forms/blogForm.js","components/utils/infoMessage.js","components/blogList.js","components/userList.js","components/singleUser.js","components/singleBlog.js","services/login.js","reducers/userReducer.js","components/logInAndInfo.js","components/navigation.js","services/users.js","App.js","utils/store.js","index.js"],"names":["Togglable","React","forwardRef","props","ref","visible","setVisible","useState","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","Button","size","onClick","buttonLabel","className","children","displayName","useField","type","placeholder","value","setValue","toInput","onChange","event","target","onClear","baseUrl","token","axios","get","then","response","data","async","config","headers","Authorization","post","newObj","id","put","newToken","delete","newComment","comment","notificationChange","notification","timeSeconds","dispatch","Promise","resolve","setTimeout","notificationReducer","state","action","likeBlogActionCreator","blog","newBlog","likes","blogService","blogReducer","concat","map","b","filter","BlogFormIfUser","author","title","url","useRef","useDispatch","onSubmit","current","preventDefault","blogObject","returnedBlog","text","color","catch","err","message","marginLeft","variant","BlogForm","createBlog","user","useSelector","Object","keys","length","InfoMessage","styleObj","width","margin","border","padding","textAlign","borderRadius","backgroundColor","Blog","expanded","setExpanded","showWhenExpanded","onDelete","window","confirm","status","console","log","deleteBlogActionCreator","boxShadow","overflow","to","float","onLike","BlogList","blogs","sort","a","UserList","users","history","useHistory","Table","striped","bordered","hover","onClickName","push","name","SingleUser","SingleBlog","useParams","find","n","href","e","c","addCommentActionCreator","comments","index","credentials","setUserActionCreator","userReducer","LogInAndInfo","username","password","onLogout","localStorage","clear","loginService","setItem","JSON","stringify","setNewUserActionCreator","u","exception","NavDiv","styled","div","LinkStyle","p","Navigation","App","setUsers","useEffect","loggedUserJSON","getItem","parse","userService","match","useRouteMatch","singleUser","params","path","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a2237e00.chunk.js","sourcesContent":["import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button } from 'react-bootstrap'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <Button size='sm' onClick={toggleVisibility}>{props.buttonLabel}</Button>\n      </div>\n      <div style={showWhenVisible} className='togglableContent'>\n        {props.children}\n        <Button size='sm' onClick={toggleVisibility}>cancel</Button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nTogglable.displayName = 'Togglable'\n\nexport default Togglable","import { useState } from 'react'\n\nexport const useField = (type, placeholder) => {\n  const [value, setValue] = useState('')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  const onClear = () => setValue('')\n\n  return {\n    toInput: {\n      type,\n      value,\n      onChange,\n      placeholder\n    },\n    onClear\n  }\n}","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObj => {\n  const config = {\n    headers: { Authorization: token  }\n  }\n\n  const res = await axios.post(baseUrl, newObj, config)\n  return res.data\n}\n\nconst update = async (id, newObj) => {\n  const req = await axios.put(`${ baseUrl }/${id}`, newObj)\n  return req.data\n}\n\nconst del = async (id) => {\n  const config = {\n    headers: { Authorization: token  }\n  }\n\n  const req = await axios.delete(`${ baseUrl }/${id}`, config)\n  return req.data\n}\n\nconst addComment = async (id, newComment) => {\n  const newObj = {\n    comment: newComment\n  }\n  const req = await axios.post(`${baseUrl}/${id}/comments`, newObj)\n  return req.data\n}\n\nexport default { getAll, create, update, setToken, del, addComment }","const notificationReducer = (state = null, action) => {\n  switch (action.type) {\n  case 'SET_NOTIFICATION':\n    return action.notification\n  default:\n    return state\n  }\n}\n\nexport const notificationChange = (notification, timeSeconds=5) => {\n  return async dispatch => {\n    await dispatch({\n      type: 'SET_NOTIFICATION',\n      notification\n    })\n    await new Promise(resolve => setTimeout( resolve, timeSeconds * 1000 ))\n    dispatch({\n      type: 'SET_NOTIFICATION',\n      notification: ''\n    })\n  }\n}\nexport const notificationEmpty = () => {\n  return {\n    type: 'SET_NOTIFICATION',\n    notification: ''\n  }\n}\n\nexport default notificationReducer","import blogService from '../services/blogs'\nimport { notificationChange } from './notificationReducer'\n\nconst blogReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'ADD_BLOG':\n    return state.concat(action.data)\n  case 'INITIALIZE_BLOGS':\n    return action.data\n  case 'UPDATE_BLOG': {\n    return state.map(b => b.id === action.blog.id ? action.blog : b)\n  }\n  case 'DELETE_BLOG': {\n    const id = action.blog.id\n    return state.filter(b => b.id !== id)\n  }\n  default:\n    return state\n  }\n}\n\nexport const addNewBlog = (data) => {\n  return async dispatch => {\n    await dispatch({\n      type: 'ADD_BLOG',\n      data\n    })\n  }\n}\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll()\n    await dispatch({\n      type: 'INITIALIZE_BLOGS',\n      data: blogs\n    })\n  }\n}\nexport const likeBlogActionCreator = (blog) => {\n  return async dispatch => {\n    const newBlog = {\n      ...blog,\n      likes: blog.likes + 1\n    }\n    await blogService.update(blog.id, newBlog)\n    await dispatch({\n      type: 'UPDATE_BLOG',\n      blog: newBlog\n    })\n  }\n}\nexport const addCommentActionCreator = (blog, newComment) => {\n  return async dispatch => {\n    const newObj = await blogService.addComment(blog.id, newComment)\n    await dispatch({\n      type: 'UPDATE_BLOG',\n      blog: newObj\n    })\n  }\n}\nexport const deleteBlogActionCreator = (blog) => {\n  return async dispatch => {\n    try {\n      await blogService.del(blog.id)\n      await dispatch({\n        type: 'DELETE_BLOG',\n        blog\n      })\n      dispatch(notificationChange({\n        text: `Post '${blog.title}' deleted`,\n        color: 'green'\n      }))\n    }\n    catch (err) {\n      if (err.response.status === 401) {\n        console.log('You cannot delete other users posts')\n        dispatch(notificationChange({\n          text: 'You cannot delete other users posts',\n          color: 'red'\n        }))\n      }\n      else {\n        console.log('This post has been deleted elsewhere, try to refresh.')\n        dispatch(notificationChange({\n          text: 'This post has been deleted elsewhere, try to refresh.',\n          color: 'red'\n        }))\n      }\n    }\n  }\n}\n\nexport default blogReducer","import React, { useRef } from 'react'\nimport Togglable from '../utils/togglable'\nimport { useSelector } from 'react-redux'\nimport { useField } from '../../hooks'\nimport blogService from '../../services/blogs'\nimport { useDispatch } from 'react-redux'\nimport { notificationChange } from '../../reducers/notificationReducer'\nimport { addNewBlog } from '../../reducers/blogReducer'\nimport { Button } from 'react-bootstrap'\n\nconst BlogFormIfUser = () => {\n  const author = useField('text', 'author')\n  const title = useField('text', 'title')\n  const url = useField('text', 'url')\n  const ref = useRef()\n  const dispatch = useDispatch()\n\n  const addBlog = (event) => {\n    ref.current.toggleVisibility()\n    event.preventDefault()\n    const blogObject = {\n      author: author.toInput.value,\n      title: title.toInput.value,\n      url: url.toInput.value\n    }\n    blogService\n      .create(blogObject)\n      .then(returnedBlog => {\n        dispatch(notificationChange({\n          text: `${returnedBlog.title} added`,\n          color: 'green'\n        }))\n        dispatch(addNewBlog(returnedBlog))\n      })\n      .catch(err => {\n        dispatch(notificationChange({\n          text: err.message,\n          color: 'red'\n        }))\n      })\n    author.onClear()\n    title.onClear()\n    url.onClear()\n\n  }\n\n  return (\n    <Togglable buttonLabel='new blog' ref={ref}>\n      <div>\n        <h2>Save a new blog</h2>\n        <form onSubmit={addBlog}>\n          <input {...title.toInput}/>\n          <input {...author.toInput}/>\n          <input {...url.toInput}/>\n          <Button style={{ marginLeft: '5px' }} variant='outline-success' type=\"submit\">save</Button>\n        </form>\n      </div>\n    </Togglable>\n  )\n}\n\nconst BlogForm = ({ createBlog }) => {\n  const user = useSelector(state => state.user)\n  if ((user === null || Object.keys(user).length === 0)) {\n    return <p>You must log in to add new notes</p>\n  }\n  return <BlogFormIfUser createBlog={createBlog} />\n}\n\nexport default BlogForm","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nconst InfoMessage = () => {\n  const notification = useSelector(state => state.notification)\n  if (!notification) { return null }\n\n  const styleObj = {\n    width: '95%',\n    margin: '0 auto 20px auto',\n    border: `2px solid ${notification.color}`,\n    padding: '10px 20px',\n    textAlign: 'center',\n    borderRadius: '10px',\n    backgroundColor: '#fff'\n  }\n  return <div style={styleObj}>{notification.text}</div>\n}\n\nexport default InfoMessage","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { likeBlogActionCreator, deleteBlogActionCreator } from '../reducers/blogReducer'\nimport { Link } from 'react-router-dom'\nimport { Button } from 'react-bootstrap'\n\n/* import Blog from './blog' */\n\nconst Blog = ({ blog }) => {\n  const dispatch = useDispatch()\n  const [expanded, setExpanded] = useState(false)\n\n  const toggleExpanded = () => setExpanded(!expanded)\n  const showWhenExpanded = { display: expanded ? '' : 'none' }\n  const marginStyle = {\n    margin: '20px 0',\n    backgroundColor: '#fff',\n    padding:'10px',\n    textAlign:'cetner',\n    borderRadius:'10px',\n    boxShadow:'0 0 5px #bbb',\n    border: '1px solid #444',\n    overflow: 'hidden'\n  }\n\n  const onLike = (blog) => {\n    dispatch(likeBlogActionCreator(blog))\n  }\n\n  const onDelete = (blog) => {\n    if (!window.confirm('Do you want to delete this post?')) { return }\n    dispatch(deleteBlogActionCreator(blog))\n  }\n  const rightMargin = {\n    float: 'right'\n  }\n\n  return (\n    <div className='blog-master-class' style={marginStyle}>\n      <div id='blog-title'>\n        <Link to={`/blogs/${blog.id}`}>{blog.title}</Link> <Button style={rightMargin} size='sm' onClick={toggleExpanded}>{expanded ? 'hide' : 'view'}</Button>\n      </div>\n      <div style={showWhenExpanded} className='blog-expandable'>\n        <div id='blog-url'>{blog.url}</div>\n        <div id='blog-likes'>\n          likes {blog.likes} <Button variant='outline-primary' size='sm' onClick={() => onLike(blog)}>like</Button>\n        </div>\n        <div id='blog-author'>{blog.author}</div>\n        <Button variant='danger' size='sm' onClick={() => onDelete(blog)}>remove</Button>\n      </div>\n\n    </div>\n  )\n}\n\nconst BlogList = () => {\n  const blogs = useSelector(state => state.blogs)\n\n  return (\n    <div>\n      {blogs.sort((a, b) => a.likes < b.likes ? 1 : a.likes > b.likes ? -1 : 0)\n        .map(blog => (\n          <Blog key={blog.id} blog={blog} />\n        ))}\n    </div>\n  )\n}\n\nexport default BlogList","import React from 'react'\nimport {\n  useHistory\n} from 'react-router-dom'\nimport { Table } from 'react-bootstrap'\n\nconst UserList = ({ users }) => {\n  const history = useHistory()\n\n  console.log(users)\n\n  const onClickName = (id) => {\n    history.push(`/users/${id}`)\n  }\n\n  return (\n    <div>\n      <h2>Users</h2>\n      <Table striped bordered hover>\n        <tbody>\n          <tr>\n            <th>User</th>\n            <th>blogs created</th>\n          </tr>\n          {!users ? null : users.map(user => {\n            return (\n              <tr key={user.id}>\n                <td onClick={() => onClickName(user.id)}>{user.name}</td>\n                <td>{user.blogs.length}</td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nexport default UserList","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst SingleUser = ({ user }) => {\n  console.log('In Single User', user)\n  if (!user) return null\n  return (\n    <div>\n      <h2>{user.name}</h2>\n      <p><b>added blogs</b></p>\n      <p>{user.blogs.length === 0 ? 'no blogs yet' : ''}</p>\n      <ul>\n        {user.blogs.map((blog) => (\n          <li key={blog.id}><Link to={`/blogs/${blog.id}`}>{blog.title}</Link></li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default SingleUser","import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { likeBlogActionCreator } from '../reducers/blogReducer'\nimport { useField } from '../hooks/index'\nimport { addCommentActionCreator } from '../reducers/blogReducer'\nimport { Button } from 'react-bootstrap'\n\nconst SingleBlog = () => {\n  const blogs = useSelector(state => state.blogs)\n  const dispatch = useDispatch()\n  const id = useParams().id\n  const newComment = useField('text', 'new comment')\n\n\n  if (blogs.filter(b => b.id === id).length === 0) return null\n  const blog = blogs.find(n => n.id === id)\n  const likeBlog = () => {\n    dispatch(likeBlogActionCreator(blog))\n  }\n  const submitNewComment = (e) => {\n    e.preventDefault()\n    const c = newComment.toInput.value\n    newComment.onClear()\n    dispatch(addCommentActionCreator(blog, c))\n  }\n\n  return (\n    <div>\n      <h2>{blog.title}</h2>\n      <a href={blog.url}>{blog.url}</a>\n      <div>\n        {blog.likes} likes <Button size='sm' onClick={likeBlog}>like</Button>\n      </div>\n      <p>\n        Added by {blog.author}\n      </p>\n      <p><b>comments</b></p>\n      <div>\n        <form onSubmit={submitNewComment}>\n          <input {...newComment.toInput}/>\n          <Button style={{ marginLeft: '5px' }} variant='outline-success' type='submit'>submit</Button>\n        </form>\n        <ul>\n          {blog.comments.map((comment, index) => (\n            <li key={index}>{comment}</li>\n          ))}\n        </ul>\n        <p>{blog.comments.length === 0 ? 'this post has no comments yet' : ''}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default SingleBlog","import axios from 'axios'\nconst baseUrl = 'api/login'\n\nconst login = async credentials => {\n  const res = await axios.post(baseUrl, credentials)\n  /* console.log(res) */\n  return res.data\n}\n\nexport default { login }","import blogService from '../services/blogs'\nimport loginService from '../services/login'\n\nconst userReducer = (state = {}, action) => {\n  switch (action.type) {\n  case 'SET_USER':\n    return action.data\n  default:\n    return state\n  }\n}\n\nexport const setUserActionCreator = (data) => {\n  return async dispatch => {\n    dispatch({\n      type: 'SET_USER',\n      data\n    })\n  }\n}\n\nexport const setNewUserActionCreator = (username, password) => {\n  return async dispatch => {\n    console.log(username, password)\n    const user = await loginService.login({ username, password })\n    window.localStorage.setItem(\n      'loggedBlogAppUser',JSON.stringify(user)\n    )\n    blogService.setToken(user.token)\n    await dispatch({\n      type: 'SET_USER',\n      data: user\n    })\n    return user\n  }\n}\n\nexport default userReducer","import React from 'react'\nimport { useField } from '../hooks/index'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setNewUserActionCreator, setUserActionCreator } from '../reducers/userReducer'\nimport { notificationChange } from '../reducers/notificationReducer'\nimport { Button } from 'react-bootstrap'\n\nconst LogInAndInfo = () => {\n  const dispatch = useDispatch()\n  const user = useSelector(state => state.user)\n  const username = useField('text', 'username')\n  const password = useField('password', 'password')\n\n  const onSubmit = (event) => {\n    event.preventDefault()\n\n    try {\n      dispatch(setNewUserActionCreator(username.toInput.value, password.toInput.value)).then((u) => {\n        dispatch(notificationChange({\n          text: `${u.name} logged in`,\n          color: 'green'\n        }))\n      })\n    }\n    catch (exception) {\n      dispatch(notificationChange({\n        text: 'Wrong credentials',\n        color: 'red'\n      }))\n    }\n  }\n\n  const onLogout = () => {\n    window.localStorage.clear()\n    dispatch(setUserActionCreator(null))\n  }\n\n  if (!(user === null || Object.keys(user).length === 0)) {\n    return (\n      <div>\n        {user.name} logged in <Button size='sm' onClick={onLogout}>logout</Button>\n        <br />\n      </div>\n    )\n  }\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input {...username.toInput}/>\n        <input {...password.toInput} />\n        <Button size='sm' type='submit'>log in</Button>\n      </form>\n    </div>\n  )\n}\n\nexport default LogInAndInfo","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport LogInAndInfo from './logInAndInfo'\n\nconst NavDiv = styled.div`\n  width: 100%;\n  height: fit-content;\n  background-color: white;\n  border-bottom: 1px solid black;\n  padding: 10px 0;\n  margin-bottom: 20px;\n`\n\nconst LinkStyle = styled.p`\n  padding: 0;\n  margin: 10px 30px;\n  font-size: 1.2rem;\n  display: inline;\n`\n\nconst Navigation = () => {\n\n  const inlineStyle = {\n    display: 'inline-block'\n  }\n\n  return (\n    <NavDiv>\n      <Link to='/'>\n        <LinkStyle>Blogs</LinkStyle>\n      </Link>\n      <Link to='/users'>\n        <LinkStyle>Users</LinkStyle>\n      </Link>\n      <div style={inlineStyle}>\n        <LogInAndInfo />\n      </div>\n    </NavDiv>\n  )\n}\n\nexport default Navigation","import axios from 'axios'\nconst baseUrl = '/api/users'\n\n/* let token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n} */\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nexport default { getAll }","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  Switch, Route, useRouteMatch\n} from 'react-router-dom'\n\nimport BlogForm from './components/forms/blogForm'\nimport InfoMessage from './components/utils/infoMessage'\nimport BlogList from './components/blogList'\nimport UserList from './components/userList'\nimport SingleUser from './components/singleUser'\nimport SingleBlog from './components/singleBlog'\nimport Navigation from './components/navigation'\n\nimport blogService from './services/blogs'\nimport userService from './services/users'\n\nimport { initializeBlogs } from './reducers/blogReducer'\nimport { setUserActionCreator } from './reducers/userReducer'\n\n\nconst App = () => {\n  const dispatch = useDispatch()\n  const [users, setUsers] = useState(null)\n  const blogs = useSelector(state => state.blogs)\n\n  useEffect(() => {\n    dispatch(initializeBlogs())\n  }, [])\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      blogService.setToken(user.token)\n      dispatch(setUserActionCreator(user))\n    }\n  }, [])\n  useEffect(() => {\n    userService.getAll().then((u) => setUsers(u))\n  }, [])\n\n  const match = useRouteMatch('/users/:id')\n  const singleUser = match && users ? users.find(u => u.id === match.params.id) : null\n\n  return (\n    <div className='container'>\n      <Navigation />\n      <InfoMessage />\n      <h1>BLOG APP</h1>\n      <Switch>\n        <Route path='/users/:id'>\n          <SingleUser user={singleUser}/>\n        </Route>\n        <Route path='/users'>\n          <UserList users={users}/>\n        </Route>\n        <Route path='/blogs/:id'>\n          <SingleBlog blogs={blogs}/>\n        </Route>\n        <Route path='/'>\n          <BlogForm />\n          <BlogList />\n        </Route>\n      </Switch>\n    </div>\n  )\n}\n\nexport default App","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\n\nimport notificationReducer from '../reducers/notificationReducer'\nimport blogReducer from '../reducers/blogReducer'\nimport userReducer from '../reducers/userReducer'\n\nconst reducer = combineReducers({\n  notification: notificationReducer,\n  blogs: blogReducer,\n  user: userReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport store from './utils/store'\nimport {\n  BrowserRouter as Router\n} from 'react-router-dom'\n\nimport './index.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}